/**HELPER CLASS STARTS**/

body {
  background: $backgroundcolor;
  min-height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  font-weight: 400;
  color: $color;
  font-size: 1em;
  margin: 0px;
  padding: 0px;
}


.helperHidden{
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.inline-block{
  display: inline-block;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}


.flex-center{
  justify-content:center;
}

.flex-start{
  justify-content:flex-start;
}

.flex-end{
  justify-content:flex-end;
}


.border-bottom{
  border-bottom: 1px solid #cccccc;
}

.border-top{
  border-top: 1px solid #cccccc;
}

.border-left{
  border-left: 1px solid #cccccc;
}

.border-right{
  border-right: 1px solid #cccccc;
}


/**HEADER STYLE STARTS **/
.header {
  background-color: $primaryBGColor;
  color: $primaryColor;
  padding: 10px;
  overflow: hidden;
}

.header .title {
  float: left;
  font-size:20px;
}

/**HEADER STYLE ENDS **/



/**TABLE**/
.table{
  display: table;
  padding: 5px;
}

.table .tablerow{
  display: table-row;
}

.table .tablerow .tablecol{
  display: table-cell;
  padding-right: 5px;
  padding-left: 5px;
  vertical-align: middle;
}

.listbox .header .table .tablerow .tablecol{
 padding-right: 0px!important;
}

/** Disabled **/
input:disabled {
  opacity: 0.55;
  cursor: not-allowed;
  background-color: #EBEBE4;
}

.disable-component{
  opacity: 0.55;
  pointer-events: none;
}

.defaultcolor{
  color: $defaultColor;
}


.verticalalign-tableft{
  vertical-align: top !important;
  border-right: $tabBorderSize solid $tabBorderColor !important;
}

.verticalalign-tabright{
  vertical-align: top !important;
  border-left: $tabBorderSize solid $tabBorderColor !important;
}

.verticalalign-tabcontent
{
  vertical-align: top !important;
}

//Image Component Responsive
.img-fluid{
  max-width: 100%;
  height: auto;
}

/*
We set the element we are applying our loading mask to relative
*/
.loading-mask {
  position: relative;
}

/*
Because we set .loading-mask relative, we can span our ::before
element over the whole parent element
*/
.loading-mask::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/*
Spin animation for .loading-mask::after
*/
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

/*
The loading throbber is a single spinning element with three
visible borders and a border-radius of 50%.
Instead of a border we could also use a font-icon or any
image using the content attribute.
*/
.loading-mask::after {
  content: "";
  position: absolute;
  border-width: 3px;
  border-style: solid;
  border-color: transparent $primaryBGColor $primaryBGColor;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  top: calc(50% - 12px);
  left: calc(50% - 12px);
  animation: 2s linear 0s normal none infinite running spin;
  filter: drop-shadow(0 0 2 rgba(0, 0, 0, 0.33));
}

/** **/
@keyframes spinner {
  to {transform: rotate(360deg);}
}

.spinner:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: $primaryBGColor;
  border-bottom-color: $primaryBGColor;
  animation: spinner .8s ease infinite;
}

.row-disabled{
  opacity: 0.55;
}
